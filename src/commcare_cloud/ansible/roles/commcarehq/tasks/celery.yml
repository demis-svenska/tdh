# Note: Make sure to add queues with associated tasks to the solo_queues list in
# validate_app_processes_config(), in app_processes.py, so they don't share a process with another queue.
- set_fact:
    celery_bash_runner: "{{ service_home }}/{{ deploy_env }}_celery_bash_runner.sh"
    supervisor_celery_flower: "{{ service_home }}/{{ deploy_env }}_supervisor_celery_flower.conf"
    supervisor_celery_beat: "{{ service_home }}/{{ deploy_env }}_supervisor_celery_beat.conf"
    supervisor_celery_workers: "{{ service_home }}/{{ deploy_env }}_supervisor_celery_workers.conf"

- set_fact:
    celery_managed_files:
      - "{{celery_bash_runner}}"
      - "{{supervisor_celery_flower}}"
      - "{{supervisor_celery_beat}}"
      - "{{supervisor_celery_workers}}"

- name: Add celery_bash_runner files
  template:
    src: "../templates/celery_bash_runner.sh.j2"
    dest: "{{ item.file_name }}"
    owner: "{{ cchq_user }}"
    group: "{{ cchq_user }}"
    mode: 0644
  with_items:
    - file_name: "{{ celery_bash_runner }}"

- name: define special celery services
  template:
    src: "{{ item.template }}"
    dest: "{{ item.file_name }}"
    owner: "{{ cchq_user }}"
    group: "{{ cchq_user }}"
    mode: 0644
  when: item.should_apply
  with_items:
    - template: ../templates/supervisor_celery_flower.conf.j2
      file_name: "{{supervisor_celery_flower}}"
      should_apply: "{{ app_processes_config.celery_processes.get(inventory_hostname).flower is defined }}"
    - template: ../templates/supervisor_celery_beat.conf.j2
      file_name: "{{supervisor_celery_beat}}"
      should_apply: "{{ app_processes_config.celery_processes.get(inventory_hostname).beat is defined }}"

- name: define celery workers
  template:
    src: "../templates/supervisor_celery_workers.conf.j2"
    dest: "{{ supervisor_celery_workers }}"
    owner: "{{ cchq_user }}"
    group: "{{ cchq_user }}"
    mode: 0644
  when: app_processes_config.celery_processes.get(inventory_hostname) is defined
  with_items:
    - env_vars:
        http_proxy: "{% if http_proxy_address is defined %}http://{{ http_proxy_address }}:{{ http_proxy_port }}{% endif %}"
        https_proxy: "{% if http_proxy_address is defined %}https://{{ http_proxy_address }}:{{ http_proxy_port }}{% endif %}"
        no_proxy: "{% if http_proxy_address is defined %}{{ groups['all'] | join(',') }},{{ app_processes_config.additional_no_proxy_hosts }}{% endif %}"
        PROMETHEUS_PUSHGATEWAY_HOST: "{% if prometheus_celery_pushgateway is defined %}{{ prometheus_celery_pushgateway }}{% endif %}"
        TMPDIR: '{{ encrypted_tmp }}'

- name: add "DigiCert SHA2 Secure Server CA" certificate to certifi
  blockinfile:
    path: "{{ virtualenv_home }}/lib/python{{ python_version }}/site-packages/certifi/cacert.pem"
    block: |
      -----BEGIN CERTIFICATE-----
      MIIE6DCCA9CgAwIBAgIQAnQuqhfKjiHHF7sf/P0MoDANBgkqhkiG9w0BAQsFADBh
      MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
      d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD
      QTAeFw0yMDA5MjMwMDAwMDBaFw0zMDA5MjIyMzU5NTlaME0xCzAJBgNVBAYTAlVT
      MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxJzAlBgNVBAMTHkRpZ2lDZXJ0IFNIQTIg
      U2VjdXJlIFNlcnZlciBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
      ANyuWJBNwcQwFZA1W248ghX1LFy949v/cUP6ZCWA1O4Yok3wZtAKc24RmDYXZK83
      nf36QYSvx6+M/hpzTc8zl5CilodTgyu5pnVILR1WN3vaMTIa16yrBvSqXUu3R0bd
      KpPDkC55gIDvEwRqFDu1m5K+wgdlTvza/P96rtxcflUxDOg5B6TXvi/TC2rSsd9f
      /ld0Uzs1gN2ujkSYs58O09rg1/RrKatEp0tYhG2SS4HD2nOLEpdIkARFdRrdNzGX
      kujNVA075ME/OV4uuPNcfhCOhkEAjUVmR7ChZc6gqikJTvOX6+guqw9ypzAO+sf0
      /RR3w6RbKFfCs/mC/bdFWJsCAwEAAaOCAa4wggGqMB0GA1UdDgQWBBQPgGEcgjFh
      1S8o541GOLQs4cbZ4jAfBgNVHSMEGDAWgBQD3lA1VtFMu2bwo+IbG8OXsj3RVTAO
      BgNVHQ8BAf8EBAMCAYYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMBIG
      A1UdEwEB/wQIMAYBAf8CAQAwdgYIKwYBBQUHAQEEajBoMCQGCCsGAQUFBzABhhho
      dHRwOi8vb2NzcC5kaWdpY2VydC5jb20wQAYIKwYBBQUHMAKGNGh0dHA6Ly9jYWNl
      cnRzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEdsb2JhbFJvb3RDQS5jcnQwewYDVR0f
      BHQwcjA3oDWgM4YxaHR0cDovL2NybDMuZGlnaWNlcnQuY29tL0RpZ2lDZXJ0R2xv
      YmFsUm9vdENBLmNybDA3oDWgM4YxaHR0cDovL2NybDQuZGlnaWNlcnQuY29tL0Rp
      Z2lDZXJ0R2xvYmFsUm9vdENBLmNybDAwBgNVHSAEKTAnMAcGBWeBDAEBMAgGBmeB
      DAECATAIBgZngQwBAgIwCAYGZ4EMAQIDMA0GCSqGSIb3DQEBCwUAA4IBAQB3MR8I
      l9cSm2PSEWUIpvZlubj6kgPLoX7hyA2MPrQbkb4CCF6fWXF7Ef3gwOOPWdegUqHQ
      S1TSSJZI73fpKQbLQxCgLzwWji3+HlU87MOY7hgNI+gH9bMtxKtXc1r2G1O6+x/6
      vYzTUVEgR17vf5irF0LKhVyfIjc0RXbyQ14AniKDrN+v0ebHExfppGlkTIBn6rak
      f4994VH6npdn6mkus5CkHBXIrMtPKex6XF2firjUDLuU7tC8y7WlHgjPxEEDDb0G
      w6D0yDdVSvG/5XlCNatBmO/8EznDu1vr72N8gJzISUZwa6CCUD7QBLbKJcXBBVVf
      8nwvV9GvlW+sbXlr
      -----END CERTIFICATE-----

